name: Docker build & push

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      
jobs:
  build-push-ecr-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Define as origens da branch/tag 
        id: sources
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
          echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV
      - name: Configura as credenciais AWS 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login no Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Envia imagem para o Amazon ECR
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ github.event.repository.name }}
          IMAGE_TAG: ${{ steps.sources.outputs.SOURCE_TAG }}
        run: |
           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:env.BRANCH .
           docker push $ECR_REGISTRY/$ECR_REPOSITORY:env.BRANCH

  notify-telegram:
    needs: build-push-ecr-image
    name: Notificacao do Telegram
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notificacao telegram
        uses: yanzay/notify-telegram@v0.1.0
        if: always()
        with:
          chat: ${{ secrets.chat }} # user id or channel name secret
          token: ${{ secrets.token }} # token secret
          status: ${{ build-push-ecr-image.status }} # do not modify this line
          
